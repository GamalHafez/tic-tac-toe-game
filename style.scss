%glass-card {
  // <-- placeholder selector in Sass
  border-radius: var(--border-radius);
  box-shadow: var(--shadow);
  backdrop-filter: blur(5px);
  transition: var(--timing-animation);
}

// Reset:
* {
  margin: 0;
  padding: 0;
  font: inherit;
  color: inherit;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

button {
  border: none;
  cursor: pointer;
  background: transparent;
}

// Variables:
:root {
  --font-family: "Fira Sans", sans-serif;
  --number-of-columns: 3;

  --font-size-30: 3rem;
  --font-size-28: 2.8rem;
  --font-size-26: 2.6rem;
  --font-size-14: 1.4rem;
  --weight-semibold: 600;

  --player1-color: #249ae9;
  --player2-color: #ffffff;

  --container-bg: #1f3f54;
  --cell-bg: #294468;
  --cell-shadow-bg: #33607d;
  --cell-hover-bg: #153867;
  --cell-shadow-hover-bg: #4a8cb8;
  --cell-click-bg: #1f3f545a;
  --level-box-bg: #1f3f54;
  --reset-bg: #29446864;
  --text-color: #ffffff;

  --timing-animation: 0.3s;
  --timing-click: 0.15s;
  --border-radius: 0.5rem;
  --shadow: 0 0 10px 2px rgba(0, 0, 0, 0.15);
}

// General:
html {
  @media (max-width: 800px) {
    font-size: 62.5%;
  }
}

body {
  line-height: 1.4;
  font-family: var(--font-family);
  color: var(--text-color);
  font-weight: var(--weight-semibold);
}

.container {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-color: var(--container-bg);
  transition: background-color var(--timing-animation);

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url(../images/tic-tac-toe-background.svg);
    background-size: 40rem; ///
    background-repeat: repeat;
    filter: blur(1.1px);
    opacity: 0.5;
    z-index: 0;
  }
}

.card {
  padding: 2rem 5rem;
  @extend %glass-card;
  z-index: 1;
}

.main-card {
  display: grid;
  grid-template-columns: 1fr;
  justify-content: center;
  align-items: center;
  gap: 2rem;

  @media (max-width: 550px) {
    padding: 2rem 3rem;
  }
}

.disappear {
  opacity: 0;
  pointer-events: none;
  z-index: -1;
}

.appear {
  opacity: 1;
  pointer-events: auto;
  z-index: 1;
}

.difficulty {
  position: absolute;
  display: grid;
  grid-template-columns: 1.5fr 0.7fr;
  row-gap: 2rem;

  &__title {
    grid-column: 1/-1;
  }

  &__options {
    border: none;
    cursor: pointer;
  }

  &__option {
    color: var(--cell-hover-bg);
  }

  &__submit {
    &-img {
      width: 1.8rem;
      margin-inline-start: 0.7rem;
      max-width: 100%;
    }
  }
}

.title {
  font-size: var(--font-size-28);
  text-align: center;
}

.game-board {
  display: grid;
  grid-template-columns: repeat(var(--number-of-columns), 1fr);
  gap: 1.4rem;
  justify-self: center;
}

.cell {
  position: relative;
  background: var(--cell-bg);
  aspect-ratio: 1/1; // keeps squares
  width: min(8.5rem);
  border-radius: var(--border-radius);
  box-shadow: var(--shadow);
  transition: all 0.2 ease-in;
  font-size: var(--font-size-30);

  @media (max-width: 550px) {
    font-size: var(--font-size-26);
  }

  &.player1-color {
    color: var(--player1-color);
  }

  &.player2-color {
    color: var(--player2-color);
  }

  &:hover {
    background: var(--cell-hover-bg);
  }

  &:hover::before {
    background: var(--cell-shadow-hover-bg);
  }

  &.click {
    @extend %glass-card; // same style as card
    background: var(--cell-click-bg);
  }

  &.click::before {
    background: var(--cell-click-bg);
  }

  &::before {
    content: "";
    position: absolute;
    top: 0.2rem;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    background: var(--cell-shadow-bg);
    border-radius: var(--border-radius);
    transition: all var(--timing-animation) ease-in-out;
  }
}

.game__control {
  display: flex;
  justify-content: space-around;
  gap: 1rem;
}

.button {
  padding: 0.6rem 2rem;
  align-self: center;
  background-color: var(--reset-bg);
  border-radius: var(--border-radius);
  box-shadow: var(--shadow);
  transition: var(--timing-animation);
  font-size: var(--font-size-14);
}

.reset:hover,
.change:hover {
  transform: scale(1.04);
}

@keyframes clickStyle {
  50% {
    transform: scale(0.92);
  }
}
// The clickStyle animation feels nice,
//but consider shortening the duration slightly for a snappier “button press” feel.
// Maybe 0.15s instead of 0.3s.
.click {
  animation: clickStyle 0.15s ease-in-out;
}

.player,
.won-type {
  color: var(--cell-shadow-hover-bg);
  text-transform: uppercase;
}


